---
import type { AboutContent } from '@/types';
import Bio from './Bio.astro';
import Hobbies from './Hobbies.astro';
import Image from './Image.astro';
import Skills from './Skills.astro';

interface Props {
  content: Omit<AboutContent, 'BioComponent'>;
  BioComponent: AboutContent['BioComponent'];
  layout?: 'full' | 'intermediate' | 'compact';
}

const { content, BioComponent, layout = 'full' } = Astro.props;

const layoutConfig = {
  full: {
    skillsCols: 'grid-cols-4',
    imageWidth: 'w-1/3',
    size: 'full' as const,
  },
  intermediate: {
    skillsCols: 'grid-cols-2',
    imageWidth: 'w-2/4',
    size: 'full' as const,
  },
  compact: {
    skillsCols: 'grid-cols-2',
    imageWidth: 'w-2/4',
    size: 'compact' as const,
  },
};

const config = layoutConfig[layout];
---

{
  layout === 'full' ? (
    <div class="flex">
      <div class="flex w-full flex-col justify-center space-y-12">
        <Skills skills={content.skills} class={config.skillsCols} />
        <Hobbies hobbies={content.hobbies} />
        <Bio BioComponent={BioComponent} />
      </div>
      <Image image={content.image} class={config.imageWidth} size={config.size} />
    </div>
  ) : (
    <div class="flex flex-col space-y-10">
      <div class="flex w-auto flex-row">
        <div class="flex w-full flex-col justify-center space-y-12">
          <Skills skills={content.skills} class={config.skillsCols} />
          {layout === 'intermediate' && <Hobbies hobbies={content.hobbies} />}
        </div>
        <Image image={content.image} class={config.imageWidth} size={config.size} />
      </div>
      {layout === 'compact' && <Hobbies hobbies={content.hobbies} />}
      <Bio BioComponent={BioComponent} />
    </div>
  )
}
